(ns starkbank.boleto.log
  "Every time a Boleto entity is updated, a corresponding Boleto.Log
    is generated for the entity. This log is never generated by the
    user, but it can be retrieved to check additional information
    on the Boleto.
  
    ## Attributes:
      - `:id` [string]: unique id returned when the log is created. ex: \"5656565656565656\"
      - `:boleto` [Boleto]: Boleto entity to which the log refers to.
      - `:errors` [list of strings]: list of errors linked to this Boleto event
      - `:type` [string]: type of the Boleto event which triggered the log creation. ex: \"registered\" or \"paid\"
      - `:created` [string]: creation datetime for the log. ex: \"2020-03-26T19:32:35.418698+00:00\""
  (:refer-clojure :exclude [get set])
  (:require [starkbank.settings :refer [credentials]]
            [starkbank.utils.rest :refer [get-id get-page get-stream]]))

(defn- resource []
  "boleto-log")

(defn get
  "Receive a single Log map previously created by the Stark Bank API by passing its id
  
    ## Parameters (required):
      - `:id` [string]: map unique id. ex: \"5656565656565656\"
  
    ## Options:
      - `:user` [Project or Organization, default nil]: Project or Organization map returned from starkbank.user/project or starkbank.user/organization. Only necessary if starkbank.settings/user has not been set.
  
    ## Return:
      - Log map with updated attributes"
  ([id]
   (-> (get-id @credentials (resource) id {})))

  ([id, user]
   (-> (get-id user (resource) id {})))
  )

(defn query
  "Receive a stream of Log maps previously created in the Stark Bank API
    Use this function instead of page if you want to stream the objects without worrying about cursors and pagination.
  
    ## Options:
      - `:limit` [integer, default nil]: maximum number of maps to be retrieved. Unlimited if nil. ex: 35
      - `:after` [string, default nil]: date filter for maps created only after specified date. ex: \"2020-3-10\"
      - `:before` [string, default nil]: date filter for maps created only before specified date. ex: \"2020-3-10\"
      - `:types` [list of strings, default nil]: filter for log event types. ex: \"paid\" or \"registered\"
      - `:boleto-ids` [list of strings, default nil]: list of Boleto ids to filter logs. ex: [\"5656565656565656\", \"4545454545454545\"]
      - `:user` [Project or Organization, default nil]: Project or Organization map returned from starkbank.user/project or starkbank.user/organization. Only necessary if starkbank.settings/user has not been set.
  
    ## Return:
      - stream of Log maps with updated attributes"
  ([]
   (-> (get-stream @credentials (resource) {})))

  ([params]
   (-> (get-stream @credentials (resource) params)))

  ([params, user]
   (-> (get-stream user (resource) params)))
  )

(defn page
  "Receive a list of up to 100 Boleto.Log maps previously created in the Stark Bank API and the cursor to the next page.
    Use this function instead of query if you want to manually page your requests.
  
    ## Options:
      - `:cursor` [string, default nil]: cursor returned on the previous page function call
      - `:limit` [integer, default nil]: maximum number of maps to be retrieved. Unlimited if nil. ex: 35
      - `:after` [string, default nil]: date filter for maps created only after specified date. ex: \"2020-3-10\"
      - `:before` [string, default nil]: date filter for maps created only before specified date. ex: \"2020-3-10\"
      - `:types` [list of strings, default nil]: filter for log event types. ex: \"paid\" or \"registered\"
      - `:boleto-ids` [list of strings, default nil]: list of Boleto ids to filter logs. ex: [\"5656565656565656\", \"4545454545454545\"]
      - `:user` [Project or Organization, default nil]: Project or Organization map returned from starkbank.user/project or starkbank.user/organization. Only necessary if starkbank.settings/user has not been set.
  
    ## Return:
      - map with :logs and :cursor:
        - `:logs`: list of log maps with updated attributes
        - `:cursor`: cursor string to retrieve the next page of logs"
  ([]
   (-> (get-page @credentials (resource) {})))
  
  ([params]
   (-> (get-page @credentials (resource) params)))
  
  ([params, user]
   (-> (get-page user (resource) params)))
  )
